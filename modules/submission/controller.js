// Generated by CoffeeScript 1.9.3
(function() {
  var HOME_PAGE, INDEX_PAGE, LOGIN_PAGE;

  INDEX_PAGE = 'index';

  LOGIN_PAGE = 'user/login';

  HOME_PAGE = '/';

  exports.getIndex = function(req, res) {
    var User;
    User = global.db.models.user;
    return global.db.Promise.resolve().then(function() {
      if (req.session.user) {
        return User.find(req.session.user.id);
      }
    }).then(function(user) {
      var opt;
      opt = {
        contest_id: null,
        offset: req.query.offset
      };
      return global.myUtils.findSubmissions(user, opt, [
        {
          model: User,
          as: 'creator'
        }
      ]);
    }).then(function(submissions) {
      return res.render('submission/index', {
        user: req.session.user,
        submissions: submissions,
        offset: req.query.offset,
        pageLimit: global.config.pageLimit.submission
      });
    })["catch"](global.myErrors.UnknownUser, function(err) {
      req.flash('info', err.message);
      return res.redirect(LOGIN_PAGE);
    })["catch"](function(err) {
      console.log(err);
      req.flash('info', "Unknown Error!");
      return res.redirect(HOME_PAGE);
    });
  };

  exports.postIndex = function(req, res) {
    var User, opt;
    User = global.db.models.user;
    opt = {};
    return global.db.Promise.resolve().then(function() {
      if (req.session.user) {
        return User.find(req.session.user.id);
      }
    }).then(function(user) {
      opt.offset = req.query.offset;
      if (req.body.nickname !== '') {
        opt.nickname = req.body.nickname;
      }
      if (req.body.problem_id !== '') {
        opt.problem_id = req.body.problem_id;
      }
      opt.contest_id = null;
      if (req.body.language !== '') {
        opt.language = req.body.language;
      }
      if (req.body.result !== '') {
        opt.result = req.body.result;
      }
      return global.myUtils.findSubmissions(user, opt, [
        {
          model: User,
          as: 'creator'
        }
      ]);
    }).then(function(submissions) {
      return res.render('submission/index', {
        user: req.session.user,
        submissions: submissions,
        offset: opt.offset,
        pageLimit: global.config.pageLimit.submission,
        query: req.body
      });
    })["catch"](global.myErrors.UnknownUser, function(err) {
      req.flash('info', err.message);
      return res.redirect(LOGIN_PAGE);
    })["catch"](function(err) {
      console.log(err);
      req.flash('info', "Unknown Error!");
      return res.redirect(HOME_PAGE);
    });
  };

  exports.getSubmission = function(req, res) {
    var SubmissionCode, User;
    User = global.db.models.user;
    SubmissionCode = global.db.models.submission_code;
    return global.db.Promise.resolve().then(function() {
      if (req.session.user) {
        return User.find(req.session.user.id);
      }
    }).then(function(user) {
      return global.myUtils.findSubmission(user, req.params.submissionID, [
        {
          model: SubmissionCode
        }
      ]);
    }).then(function(submission) {
      if (!submission) {
        throw new global.myErrors.UnknownSubmission();
      }
      return res.render('submission/code', {
        user: req.session.user,
        submission: submission
      });
    })["catch"](global.myErrors.UnknownSubmission, function(err) {
      req.flash('info', err.message);
      return res.redirect(INDEX_PAGE);
    })["catch"](global.myErrors.UnknownUser, function(err) {
      console.log(err);
      req.flash('info', "Please Login First!");
      return res.redirect(LOGIN_PAGE);
    })["catch"](function(err) {
      console.log(err);
      req.flash('info', "Unknown Error!");
      return res.redirect(HOME_PAGE);
    });
  };

}).call(this);

//# sourceMappingURL=controller.js.map
