// Generated by CoffeeScript 1.12.6
(function() {
  exports.getTags = function(req, res) {
    return global.db.Promise.resolve().then(function() {
      return global.myUtils.findAllSolution_tag(req.params.solutionID).then(function(solution_tags) {
        return res.json(solution_tags);
      });
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json({
        error: err.message
      });
    });
  };

  exports.postTags = function(req, res) {
    var currentTag, i;
    currentTag = void 0;
    i = void 0;
    console.log(req.body.content.length);
    return global.db.Promise.resolve().then(function() {
      var results;
      i = req.body.content.length;
      results = [];
      while (true) {
        if (i) {
          global.myUtils.createSolution_tagS(req.body.content[i - 1], req.body.solutionID[i - 1], req.body.weight[i - 1]);
          results.push(i--);
        } else {
          break;
        }
      }
      return results;
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json({
        error: err.message
      });
    });
  };

  exports.postcreateTags = function(req, res) {
    var currentTag;
    currentTag = void 0;
    return global.db.Promise.resolve().then(function() {
      return global.myUtils.findTag(req.body.content);
    }).then(function(ifRelationExit) {
      if (ifRelationExit) {
        return res.json("该标签已存在！");
      } else {
        return global.myUtils.createTag(req.body.content).then(function(tag) {
          return res.json(tag.get({
            plasin: true
          }));
        });
      }
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json({
        error: err.message
      });
    });
  };

}).call(this);

//# sourceMappingURL=controller.js.map
