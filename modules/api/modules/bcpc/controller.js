// Generated by CoffeeScript 1.9.3
(function() {
  exports.getStatus = function(req, res) {
    var Group, Problem;
    Group = global.db.models.group;
    Problem = global.db.models.problem;
    return global.db.Promise.resolve().then(function() {
      return global.myUtils.findGroupsID(req.session.user);
    }).then(function(groupIDs) {
      var i, id, len;
      for (i = 0, len = groupIDs.length; i < len; i++) {
        id = groupIDs[i];
        if (id === 6) {
          return true;
        }
      }
      return false;
    }).then(function(registed) {
      return res.json({
        registed: registed
      });
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json({
        error: err.message
      });
    });
  };

  exports.getRegister = function(req, res) {
    var BCPC_GROUP, Group, User, currentGroup, joiner;
    User = global.db.models.user;
    Group = global.db.models.group;
    joiner = void 0;
    currentGroup = void 0;
    BCPC_GROUP = 6;
    return global.db.Promise.resolve().then(function() {
      if (!req.session.user) {
        throw new global.myErrors.UnknownUser();
      }
      return User.find(req.session.user.id);
    }).then(function(user) {
      if (!user) {
        throw new global.myErrors.UnknownUser();
      }
      joiner = user;
      return Group.find(BCPC_GROUP);
    }).then(function(group) {
      if (!group) {
        throw new global.myErrors.UnknownGroup();
      }
      currentGroup = group;
      return group.hasUser(joiner);
    }).then(function(res) {
      if (res) {
        throw new global.myErrors.UnknownGroup();
      }
      return currentGroup.addUser(joiner, {
        access_level: 'member'
      });
    }).then(function() {
      return res.json({
        registed: true
      });
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json({
        error: err.message
      });
    });
  };

}).call(this);

//# sourceMappingURL=controller.js.map
