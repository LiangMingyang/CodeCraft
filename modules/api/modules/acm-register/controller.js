// Generated by CoffeeScript 1.10.0
(function() {
  exports.getStatus = function(req, res) {
    var ACM_GROUP;
    ACM_GROUP = 9;
    return global.db.Promise.resolve().then(function() {
      return global.myUtils.findGroupsID(req.session.user);
    }).then(function(groupIDs) {
      var i, id, len;
      for (i = 0, len = groupIDs.length; i < len; i++) {
        id = groupIDs[i];
        if (id === ACM_GROUP) {
          return true;
        }
      }
      return false;
    }).then(function(confirmed) {
      return res.json({
        user: req.session.user,
        confirmed: confirmed
      });
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json({
        error: err.message
      });
    });
  };

  exports.getList = function(req, res) {
    var ACM_GROUP, Group, User, currentGroup, joiner;
    User = global.db.models.user;
    Group = global.db.models.group;
    joiner = void 0;
    currentGroup = void 0;
    ACM_GROUP = 9;
    return global.db.Promise.resolve().then(function() {
      return Group.find({
        where: {
          id: ACM_GROUP
        },
        include: [
          {
            model: User
          }
        ]
      });
    }).then(function(group) {
      if (!group) {
        throw new global.myErrors.UnknownGroup();
      }
      return res.json(group.get({
        plain: true
      }));
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json({
        error: err.message
      });
    });
  };

  exports.postConfirm = function(req, res) {
    var ACM_GROUP, Group, User, joiner;
    ACM_GROUP = 9;
    Group = global.db.models.group;
    User = global.db.models.user;
    joiner = void 0;
    return global.db.Promise.resolve().then(function() {
      return global.myUtils.findGroupsID(req.session.user);
    }).then(function(groupIDs) {
      var i, id, len;
      for (i = 0, len = groupIDs.length; i < len; i++) {
        id = groupIDs[i];
        if (id === ACM_GROUP) {
          return true;
        }
      }
      return false;
    }).then(function(confirmed) {
      if (confirmed) {
        throw new global.myErrors.InvalidAccess('你已经报名过了');
      }
      return User.find(req.session.user.id);
    }).then(function(user) {
      if (!user) {
        throw new global.myErrors.UnknownUser();
      }
      joiner = user;
      user.nickname = req.body.nickname;
      user.student_id = req.body.student_id;
      user.phone = req.body.phone;
      return user.save();
    }).then(function() {
      return Group.find(ACM_GROUP);
    }).then(function(group) {
      return group.addUser(joiner, {
        access_level: 'member'
      });
    }).then(function() {
      return res.json({
        confirmed: true
      });
    })["catch"](function(err) {
      res.status(err.status || 400);
      return res.json({
        error: err.message
      });
    });
  };

}).call(this);

//# sourceMappingURL=controller.js.map
