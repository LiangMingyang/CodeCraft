//
    Created by zp on 15-5-23.
    problem_title 题目标题
    description 题目内容
    time_limit 时间限制
    memory_limit 内存限制
    c++
    c
    java
    python
    viewed_public
    viewed_protected
    viewed_private
    file_in[],file_out[] 文件
extends ../layout
block title
    - var whichPage = "出题"
    title #{whichPage}
    link(rel='stylesheet', href='/stylesheets/problem/detail.css')
    link(rel='stylesheet', href='/stylesheets/iCheck.css')
block content
    - var number_of_test_data = 0;
    form(method='post', id="form", enctype='multipart/form-data')
        .containing.col-lg-6.col-md-6.col-sm-6.problem-edit-left
            .form-horizontal.row
                .col-lg-3.col-md-3.col-sm-3.col-xs-3.text-left
                    label.control-label(for="problem_title")  题目标题：
                .col-lg-9.col-md-9.col-sm-9.col-xs-9
                    - if(!problem)
                        input.form-control(type="text", id="problem_title", name="problem_title", value="", placeholder="请输入题目标题", oninput="change_problem_title(this)", onblur="change_problem_title(this)")
                    - else
                        input.form-control(type="text", id="problem_title", name="problem_title", value="#{problem.problem_title}", placeholder="请输入题目标题", oninput="change_problem_title(this)", onblur="change_problem_title(this)")
            - if(!problem)
                textarea.markdown-body.containing(type="input", name="description", contenteditable=false, id="description",oninput="Editor('description', 'preview')").
                    ## 题目描述
                    计算A+B
                    ## 输入
                    第一个数为数据组数n

                    接下来n行，每行2个整数a,b(保证a,b,  a+b在int范围内)
                    ## 输出
                    对于每组数据，输出一行，a+b的值
                    ## 输入样例
                        1
                        1 2
                    ## 输出样例
                        3
            - else
                textarea.markdown-body.containing(type="input", name="description", contenteditable=false, id="description",oninput="Editor('description', 'preview')").
                    #{problem.description}
            script.
                function Editor(input1, preview1) {
                    var input = document.getElementById(input1);
                    var preview = document.getElementById(preview1);
                    this.update = function () {
                        preview.innerHTML = markdown.toHTML(input.value);
                    };
                    input.editor = this;
                    this.update();
                };
            .row
                .col-lg-3.col-md-3.col-sm-3.text-center
                    .btn-info.btn-lg(data-toggle="modal", data-target="#basic_setting") 基本设置
                    #basic_setting.modal.fade(tabindex='-1', role='dialog', aria-labelledby='basicSetting', aria-hidden='true')
                        .modal-dialog.text-left
                            .modal-content
                                .modal-header
                                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                                        span(aria-hidden='true') ×
                                    h4#basicSetting.modal-title 基本设置
                                .modal-body
                                    .form-horizontal
                                        .form-group
                                            .col-lg-6.col-md-6.col-sm-6.col-xs-6.text-right
                                                label.control-label 时间限制(ms)[1,30000]：
                                            .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                - if(!problem)
                                                    input.form-control(type="number", min="1", max="30000", id="time_limit", onblur='check_time_limit()', name='time_limit', value="1000", placeholder="时间限制")
                                                - else
                                                    input.form-control(type="number", min="1", max="30000", id="time_limit", onblur='check_time_limit()', name='time_limit', value="#{problem.test_setting.time_limit}", placeholder="时间限制")
                                    .form-horizontal
                                        .form-group
                                            .col-lg-6.col-md-6.col-sm-6.col-xs-6.text-right
                                                label.control-label 内存限制(KB)[1,204800]：
                                            .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                - if(!problem)
                                                    input.form-control(type="number", min="1", max="204800", id="memory_limit", onblur='check_memory_limit()', name='memory_limit', value="65536", placeholder="内存限制")
                                                - else
                                                    input.form-control(type="number", min="1", max="204800", id="memory_limit", onblur='check_memory_limit()', name='memory_limit', value="#{problem.test_setting.memory_limit}", placeholder="内存限制")
                                    .form-horizontal
                                        .form-group
                                            - if(!problem)
                                                input(type="hidden", id="supported_languages", name="supported_languages", value="")
                                            - else
                                                input(type="hidden", id="supported_languages", name="supported_languages", value="#{problem.test_setting.supported_languages}")
                                            .col-lg-3.col-md-3.col-sm-3.col-xs-3.text-right
                                                label.control-label(for="supported_languages")  支持的语言：
                                            .col-lg-4.col-md-4.col-sm-4.col-xs-4.text-right
                                                .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                    label.control-label c++
                                                .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                    .checkbox(value="c++", id="checkbox1")
                                                        ins.checked#ins1
                                                br
                                                .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                    label.control-label c
                                                .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                    .checkbox(value="c", id="checkbox2")
                                                        ins.checked#ins2
                                                br
                                                .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                    label.control-label java
                                                .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                    .checkbox(value="java", id="checkbox3")
                                                        ins.checked#ins3
                                                br
                                                .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                    label.control-label python
                                                .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                    .checkbox(value="python", id="checkbox4")
                                                        ins.checked#ins4
                                                br
                                    .form-horizontal
                                        .form-group
                                            input(type="hidden", id="total_files", name="total_files", value="0")
                                    .form-horizontal
                                        .form-group
                                            .col-lg-12.col-md-12.col-sm-12.col-xs-12.text-center
                                                label.control-label 选择测试文件(不要上传两个重名文件，否则后上传的文件会替换原来的文件)：
                                    .form-horizontal
                                        .form-group
                                            .col-lg-1.col-md-1.col-sm-1.col-xs-1.text-center
                                            .col-lg-4.col-md-4.col-sm-4.col-xs-4.text-center
                                                .btn-info(onclick="add_test_data()") 增加一组测试数据：
                                            .col-lg-2.col-md-2.col-sm-2.col-xs-2.text-center
                                            .col-lg-4.col-md-4.col-sm-4.col-xs-4.text-center
                                                .btn-danger#title-of-data-button(onclick="sub_change_test_data()") 删除测试数据：
                                            .col-lg-1.col-md-1.col-sm-1.col-xs-1.text-center
                                    .form-horizontal
                                        .form-group
                                            .col-lg-5.col-md-5.col-sm-5.text-center
                                                label.control-label 输入文件：
                                            .col-lg-5.col-md-5.col-sm-5.text-center
                                                label.control-label 输出文件：
                                            .col-lg-2.col-md-2.col-sm-2.text-center
                                                label.control-label#weight_of_title 权重：
                                    #test_data
                                    //.form-horizontal(style="display:none;")
                                    //    .form-group
                                    //        .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                    //            #dropbox_in(onclick="alert(1)", name="file_in", style="min-width:100px;min-height:100px;border:3px dashed silver;")
                                    //        .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                    //            #dropbox_out(name="file_in", style="min-width:100px;min-height:100px;border:3px dashed silver;")
                                    //        input#input_file(type="file", name="file", style="display:none;")
                                    //        #dropbox1(name="file_in", style="min-width:100px;min-height:100px;border:3px dashed silver;display:none;")
                                .modal-footer
                                    //button.btn.btn-default(type='button', data-dismiss='modal') 取消---♢○♢---<br>--0w0--<br>--0..0--<br>-0..0-
                                    button.btn.btn-primary(type='button', id="button", data-dismiss='modal', aria-label='Close') 确认
                .col-lg-3.col-md-3.col-sm-3.text-center
                    .btn-warning.btn-lg(data-toggle="modal", data-target="#advanced_setting") 高级设置
                    #advanced_setting.modal.fade(tabindex='-1', role='dialog', aria-labelledby='advancedSetting', aria-hidden='true')
                        .modal-dialog.text-left
                            .modal-content
                                .modal-header
                                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                                        span(aria-hidden='true') ×
                                    h4#advancedSetting.modal-title 高级设置
                                .modal-body
                                    .form-horizontal
                                        .form-group
                                            .col-lg-10.col-md-10.col-sm-10.col-xs-10.text-right
                                                a
                                                    label#special_compared_label.control-label(href="#", for="special_compared", onmousedown="my_popover_change(this)", data-html="true", data-toggle="popover", data-trigger="focus", data-placement="left", data-content="") 是否启用自定义比较程序，必须为 0(不启用)或者 1(启用)，默认为 0 ：
                                            .col-lg-2.col-md-2.col-sm-2.col-xs-2
                                                - if(!problem || problem.special_compared != 1)
                                                    input.form-control(type="number", min="0", max="1", id="special_compared", oninput="check_special_mode()", onblur="check_special_mode()", name='special_compared', value=0, placeholder="SpecialJudge")
                                                - else
                                                    input.form-control(type="number", min="0", max="1", id="special_compared", oninput="check_special_mode()", onblur="check_special_mode()", name='special_compared', value=1, placeholder="SpecialJudge")
                                    .form-horizontal.makefile_div(style="display:none")
                                        .form-group
                                            .col-lg-6.col-md-6.col-sm-6.col-xs-6.text-right
                                                label 选择语言:
                                            .col-lg-6.col-md-6.col-sm-6.col-xs-6
                                                select(type="input", name='special_judge_lang')
                                                    option(value="c++") c++
                                                    option(value="c") c
                                                    option(value="java") java
                                                    option(value="python") python
                                    .form-horizontal.makefile_div(style="display:none")
                                        .form-group
                                            .col-lg-6.col-md-6.col-sm-6.col-xs-6.text-left
                                                label 输入Special Judge代码:
                                            .col-lg-12.col-md-12.col-sm-12.col-xs-12.text-center
                                                - if(!problem)
                                                    textarea#makefile(type="input", cols="60", rows="10", name="special_judge", placeholder="输入您的代码")
                                                - else
                                                    textarea#makefile(type="input", cols="60", rows="10", name="special_judge", placeholder="输入您的代码", value="#{problem.special_judge}")
                                    #if_special_judge_then
                                        .form-horizontal
                                            .form-group
                                                .col-lg-10.col-md-10.col-sm-10.col-xs-10.text-right
                                                    a
                                                        label#compared_level_label.control-label(href="#", for="compared_level",onmousedown="my_popover_change(this)", data-html="true", data-toggle="popover", data-trigger="focus", data-placement="left", data-content="") 使用默认程序的比较级别，若使用自定义比较程序则不用进行以下设置：
                                        .form-horizontal
                                            .form-group
                                                .col-lg-10.col-md-10.col-sm-10.col-xs-10.text-right
                                                    label#ac_compared_level_label.control-label(href="#", for="ac_compared_level", onmouseout="$('#'+this.id).popover('hide')", onmouseover="$('#'+this.id).popover('show')", data-html="true", data-toggle="popover", data-trigger="focus", data-placement="left", data-content="点击上方链接查看详细说明") 判定程序输出为正确(Accepted)的比较级别[0,3]，默认为 2 ：
                                                .col-lg-2.col-md-2.col-sm-2.col-xs-2
                                                    input.form-control(type="number", min="0", max="3", id="ac_compared_level", onblur="check_ac_compared_level()", name='ac_compared_level', value=2, placeholder="AC比较级别")
                                        .form-horizontal
                                            .form-group
                                                .col-lg-10.col-md-10.col-sm-10.col-xs-10.text-right
                                                    label#pe_compared_level_label.control-label(href="#", for="pe_compared_level", onmouseout="$('#'+this.id).popover('hide')", onmouseover="$('#'+this.id).popover('show')", data-html="true", data-toggle="popover", data-trigger="focus", data-placement="left", data-content="点击上方链接查看详细说明") 判定程序输出为格式错误(Presentation Error)的比较级别[0,3]，默认为 0 ：
                                                .col-lg-2.col-md-2.col-sm-2.col-xs-2
                                                    input.form-control(type="number", min="0", max="3", id="pe_compared_level", onblur="check_pe_compared_level()", name='pe_compared_level', value=0, placeholder="PE比较级别")
                                        .form-horizontal
                                            .form-group
                                                .col-lg-10.col-md-10.col-sm-10.col-xs-10.text-right
                                                    label#tab_compared_level_label.control-label(href="#", for="tab_compared_level", onmouseout="$('#'+this.id).popover('hide')", onmouseover="$('#'+this.id).popover('show')", data-html="true", data-toggle="popover", data-trigger="focus", data-placement="left", data-content="点击上方链接查看详细说明") 比较级别 2 所考察的制表符(9 号字符)的打印宽度[0, 100]，默认为 4 ：
                                                .col-lg-2.col-md-2.col-sm-2.col-xs-2
                                                    input.form-control(type="number", min="0", max="100", id="tab_compared_level", onblur="check_tab_compared_level()", name='tab_compared_level', value=4, placeholder="Tab比较级别")
                                        .form-horizontal
                                            .form-group
                                                .col-lg-10.col-md-10.col-sm-10.col-xs-10.text-right
                                                    label#case_compared_level_label.control-label(href="#", for="case_compared_level", onmouseout="$('#'+this.id).popover('hide')", onmouseover="$('#'+this.id).popover('show')", data-html="true", data-toggle="popover", data-trigger="focus", data-placement="left", data-content="点击上方链接查看详细说明")  PE判定时是否忽略大小写，必须为 0(不忽略)或者 1(忽略)，默认为 1 ：
                                                .col-lg-2.col-md-2.col-sm-2.col-xs-2
                                                    input.form-control(type="number", min="0", max="1", id="case_compared_level", onblur="check_case_compared_level()", name='case_compared_level', value=1, placeholder="Case比较级别")
                                .modal-footer
                                    //button.btn.btn-default(type='button', data-dismiss='modal') 取消
                                    button.btn.btn-primary(type='button', id="button", data-dismiss='modal', aria-label='Close') 确认
                .col-lg-3.col-md-3.col-sm-3.text-center
                    //.btn-primary.btn-lg(data-toggle="modal", data-target="#public_setting") 公开设置
                    //#public_setting.modal.fade(tabindex='-1', role='dialog', aria-labelledby='publicSetting', aria-hidden='true')
                    //    .modal-dialog.text-left
                    //        .modal-content
                    //            .modal-header
                    //                button.close(type='button', data-dismiss='modal', aria-label='Close')
                    //                    span(aria-hidden='true') ×
                    //                h4#publicSetting.modal-title 公开设置
                    //            .modal-body
                    //                .form-horizontal
                    //                    .form-group
                    //                        input(type="hidden", id="viewed_privilege", name="viewed_privilege", value="2")
                    //                        .col-lg-6.col-md-6.col-sm-6.col-xs-6.text-right
                    //                            label.control-label(for="supported_languages")  选择该题目可以被查看的权限：
                    //                        .col-lg-6.col-md-6.col-sm-6.col-xs-6
                    //                        .col-lg-8.col-md-8.col-sm-8.col-xs-8.text-right
                    //                            label.control-label 仅小组管理员和题目所有者可见
                    //                        .col-lg-4.col-md-4.col-sm-4.col-xs-4
                    //                            .radio(value="viewed_public", name="viewed_privilege")
                    //                                ins.checked#ins_1
                    //                        .col-lg-8.col-md-8.col-sm-8.col-xs-8.text-right
                    //                            label.control-label 仅小组成员和题目所有者
                    //                        .col-lg-4.col-md-4.col-sm-4.col-xs-4
                    //                            .radio(value="viewed_protected", name="viewed_privilege")
                    //                                ins#ins_2
                    //                        .col-lg-8.col-md-8.col-sm-8.col-xs-8.text-right
                    //                            label.control-label 所有人可见
                    //                        .col-lg-4.col-md-4.col-sm-4.col-xs-4
                    //                            .radio(value="viewed_private", name="viewed_privilege")
                    //                                ins#ins_3
                    //            .modal-footer
                    //                //button.btn.btn-default(type='button', data-dismiss='modal') 取消
                    //                button.btn.btn-primary(type='button', id="button", data-dismiss='modal', aria-label='Close') 确认
                .col-lg-3.col-md-3.col-sm-3.text-center
                    .btn-success.btn-lg(onclick="submit_information()") 保存
        .col-lg-6.col-md-6.col-sm-6.problem-edit-right
            .markdown-body.containing
                h1.problem-title#problem_really_title 请输入题目标题！
                #preview
            //.col-lg-9.col-md-9.col-sm-9.text-center
            //.col-lg-3.col-md-3.col-sm-3.text-center
            //    .btn-success.btn-lg(onclick="submit_information()") 保存
            //.col-lg-6.col-md-6.col-sm-6
            //    table.table.table-hover
            //        #file_content
            //.col-lg-6.col-md-6.col-sm-6
            //    #dropbox2(name="file_out" style="min-width:100px;min-height:100px;border:3px dashed silver;")
        block script
            script(src="/js/markdown.js")
        script.
            $(document).ready(function () {
                var __problem_title = document.getElementById("problem_title");
                change_problem_title(__problem_title);
                var __description = $("#description");
                __description.css("width", $(".problem-edit-left").width() + "px");
                Editor('description', 'preview');
                if ($(window).height() >= 850) {
                    $("#preview").css("height", $(window).height() - 350 + "px");
                    __description.css("height", $(window).height() - 350 + "px");
                }
                else {
                    $("#preview").css("height", "500px");
                    __description.css("height", "500px");
                }
                var __supported_languages = document.getElementById("supported_languages");
                if(__supported_languages.value!=""){
                    var __my_array = __supported_languages.value.split(",");
                    $("#ins1").attr("class", "");
                    $("#ins2").attr("class", "");
                    $("#ins3").attr("class", "");
                    $("#ins4").attr("class", "");
                    for(var i=0;i<__my_array.length;i++){
                        if(__my_array[i]=="c++"){
                            $("#ins1").attr("class", "checked");
                        }
                        if(__my_array[i]=="c"){
                            $("#ins2").attr("class", "checked");
                        }
                        if(__my_array[i]=="java"){
                            $("#ins3").attr("class", "checked");
                        }
                        if(__my_array[i]=="python"){
                            $("#ins4").attr("class", "checked");
                        }
                    }
                }
                check_special_mode();
            });
            $(window).resize(function () {
                var __description = $("#description");
                __description.css("width", $(".problem-edit-left").width() + "px");
                if ($(window).height() >= 850) {
                    $("#preview").css("height", $(window).height() - 350 + "px");
                    __description.css("height", $(window).height() - 350 + "px");
                }
                else {
                    $("#preview").css("height", "500px");
                    __description.css("height", "500px");
                }
            });
            function change_problem_title(data) {
                var __problem_really_title = $("#problem_really_title");
                __problem_really_title.html(data.value);
                if (data.value == "") {
                    __problem_really_title.html("请输入题目标题！");
                }
            }
            //document.addEventListener("dragenter", function (e) {
            //    dropbox_in.style.borderColor = 'gray';
            //}, false);
            //document.addEventListener("dragleave", function (e) {
            //    dropbox_in.style.borderColor = 'silver';
            //}, false);
            //dropbox_in.addEventListener("dragenter", function (e) {
            //    dropbox_in.style.borderColor = 'gray';
            //    dropbox_in.style.backgroundColor = 'white';
            //}, false);
            //dropbox_in.addEventListener("dragleave", function (e) {
            //    dropbox_in.style.backgroundColor = 'transparent';
            //}, false);
            //dropbox_in.addEventListener("dragenter", function (e) {
            //    e.stopPropagation();
            //    e.preventDefault();
            //}, false);
            //dropbox_in.addEventListener("dragover", function (e) {
            //    e.stopPropagation();
            //    e.preventDefault();
            //}, false);
            //dropbox_in.addEventListener("drop", function (e) {
            //    e.stopPropagation();
            //    e.preventDefault();
            //    handleFilesIn(e.dataTransfer.files);
            //    //submit.disabled = false;
            //}, false);
            //handleFilesIn = function (files) {
            //    var __files_information = "<tr><td>文件名称：</td><td>文件大小：</td></tr>";
            //    for (var i = 0; i < files.length; i++) {
            //        var fileSize = 0;
            //        if (files[i].size > 1024 * 1024)
            //            fileSize = (Math.round(files[i].size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
            //        else
            //            fileSize = (Math.round(files[i].size * 100 / 1024) / 100).toString() + 'KB';
            //        __files_information += "<tr><td>" + files[i].name + "</td><td>" + fileSize + "</td></tr>";
            //        //__files_information+="文件名称：" + files[i].name + "文件大小：" + fileSize + "<br>";
            //        console.log(files[i]);
            //        var file = files[i];
            //    }
            //    $("#file_content_in").html(__files_information);
            //}
            //document.addEventListener("dragenter", function (e) {
            //    dropbox_out.style.borderColor = 'gray';
            //}, false);
            //document.addEventListener("dragleave", function (e) {
            //    dropbox_out.style.borderColor = 'silver';
            //}, false);
            //dropbox_out.addEventListener("dragenter", function (e) {
            //    dropbox_out.style.borderColor = 'gray';
            //    dropbox_out.style.backgroundColor = 'white';
            //}, false);
            //dropbox_out.addEventListener("dragleave", function (e) {
            //    dropbox_out.style.backgroundColor = 'transparent';
            //}, false);
            //dropbox_out.addEventListener("dragenter", function (e) {
            //    e.stopPropagation();
            //    e.preventDefault();
            //}, false);
            //dropbox_out.addEventListener("dragover", function (e) {
            //    e.stopPropagation();
            //    e.preventDefault();
            //}, false);
            //dropbox_out.addEventListener("drop", function (e) {
            //    e.stopPropagation();
            //    e.preventDefault();
            //    handleFilesOut(e.dataTransfer.files);
            //    //submit.disabled = false;
            //}, false);
            //handleFilesOut = function (files) {
            //    var __files_information = "<tr><td>文件名称：</td><td>文件大小：</td></tr>";
            //    for (var i = 0; i < files.length; i++) {
            //        var fileSize = 0;
            //        if (files[i].size > 1024 * 1024)
            //            fileSize = (Math.round(files[i].size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
            //        else
            //            fileSize = (Math.round(files[i].size * 100 / 1024) / 100).toString() + 'KB';
            //        __files_information += "<tr><td>" + files[i].name + "</td><td>" + fileSize + "</td></tr>";
            //        //__files_information+="文件名称：" + files[i].name + "文件大小：" + fileSize + "<br>";
            //        console.log(files[i]);
            //        var file = files[i];
            //    }
            //    $("#file_content_out").html(__files_information);
            //}
            var save_message = 0;
            function submit_information() {
                save_message = 1;
                var ___sss="";
                for(var i=1;i<=4;i++){
                    if($("#ins" + i).attr("class")=="checked"){
                        if(___sss!=""){
                            ___sss+=",";
                        }
                        ___sss+=$("#checkbox" + i).attr("value");
                    }
                }
                $("#supported_languages").val(___sss);
                console.log($("#input_file"));
                console.log("submit");
                console.log($("#form"));
                $("#form").submit();
            }
            var __number_of_test_data = 0;
            var __sub_change_test_data_mod = 0;
            function add_test_data() {
                if( __sub_change_test_data_mod == 0)
                {
                    $("#test_data").append("<div class='form-horizontal'><div class='form-group'><div id='test_data" + __number_of_test_data
                            + "'><div class='col-lg-5 col-md-5 col-sm-5 col-xs-5'><input id='input_file_in"
                            + __number_of_test_data + "' type='file' name='input'/></div>"
                            + "<div class='col-lg-5 col-md-5 col-sm-5 col-xs-5'><input id='input_file_out"
                            + __number_of_test_data + "' type='file' name='output'/></div>"
                            + "<div class='col-lg-2 col-md-2 col-sm-2 col-xs-2 weight-of-file' style='display: block;'><input class='form-control' value='1' id='weight"
                            + __number_of_test_data + "' type='number' name='weight' min='1', max='100000',/></div>"
                            + "<div class='col-lg-2 col-md-2 col-sm-2 col-xs-2 delete-of-file' style='display: none;'><div value='" + __number_of_test_data + "' class='btn-danger text-center "
                            + "' onclick='sub_test_data(this)' id='delete"
                            + __number_of_test_data + "'>删除</div></div><input id='delete-or-not" + __number_of_test_data
                            + "' value=0 style='display: none;' name='delete'/></div></div></div>");
                }
                else
                {
                    $("#test_data").append("<div class='form-horizontal'><div class='form-group'><div id='test_data" + __number_of_test_data
                            + "'><div class='col-lg-5 col-md-5 col-sm-5 col-xs-5'><input id='input_file_in"
                            + __number_of_test_data + "' type='file' name='input'/></div>"
                            + "<div class='col-lg-5 col-md-5 col-sm-5 col-xs-5'><input id='input_file_out"
                            + __number_of_test_data + "' type='file' name='output'/></div>"
                            + "<div class='col-lg-2 col-md-2 col-sm-2 col-xs-2 weight-of-file' style='display: none;'><input class='form-control' value='1' id='weight"
                            + __number_of_test_data + "' type='number' name='weight' min='1', max='100000',/></div>"
                            + "<div class='col-lg-2 col-md-2 col-sm-2 col-xs-2 delete-of-file' style='display: block;'><div value='" + __number_of_test_data + "' class='btn-danger text-center "
                            + "' onclick='sub_test_data(this)' id='delete"
                            + __number_of_test_data + "'>删除</div></div><input id='delete-or-not" + __number_of_test_data
                            + "' value=0 style='display: none;' name='delete'/></div></div></div>");
                }
                __number_of_test_data++;
                $("#total_files").attr("value", __number_of_test_data);
            }
            function sub_change_test_data(){
                __title_of_data_button = $("#title-of-data-button");
                if(__sub_change_test_data_mod == 0)
                {
                    $("#weight_of_title").html("删除/还原");
                    __title_of_data_button.html("继续输入权重");
                    __title_of_data_button.attr("class", "btn-warning");
                    $(".weight-of-file").css("display", "none");
                    $(".delete-of-file").css("display", "block");
                    __sub_change_test_data_mod = 1;
                }
                else
                {
                    __sub_change_test_data_mod = 1;
                    sub_change_test_data2();
                }
            }
            function sub_change_test_data2() {
                __title_of_data_button = $("#title-of-data-button");
                if(__sub_change_test_data_mod == 1)
                {
                    $("#weight_of_title").html("权重：");
                    __title_of_data_button.html("删除测试数据");
                    __title_of_data_button.attr("class", "btn-danger");
                    $(".weight-of-file").css("display", "block");
                    $(".delete-of-file").css("display", "none");
                    __sub_change_test_data_mod = 0;
                }
                else
                {
                    __sub_change_test_data_mod = 0;
                    sub_change_test_data();
                }
            }
            function sub_test_data(elem) {
                __value_of_elem__ = $("#" + elem.id).attr("value");
                __delete_or_not = $("#delete-or-not" + __value_of_elem__);
                __delete = $("#delete" + __value_of_elem__);
                __test_data = $("#test_data" + __value_of_elem__);
                if(__delete_or_not.attr("value") == 0) {
                    __delete_or_not.attr("value", 1);
                    __test_data.css("opacity", "0.3");
                    __delete.html("还原");
                    __delete.attr("class", "btn-info text-center delete-of-file");
                } else {
                    __delete_or_not.attr("value", 0);
                    __test_data.css("opacity", "1");
                    __delete.html("删除");
                    __delete.attr("class", "btn-danger text-center delete-of-file");
                }
                //deleteDiv('#test_data' + __number_of_test_data);
            }
            function deleteDiv(data) {
                $(data).remove();
            }
            var help_of_compare_ac_level = '#################################<br># 每轮程序正确运行后，将比较其输出与标准输出文件的内容是否一致。<br># 如果不启用自定义比较程序（Special Judge Program），那么会使用默认的比较程序。<br># 默认的比较程序存在 4 个比较级别：<br># 比较级别 0：[0~32,127 号字符都会被忽略] 忽略了所有控制符、空白后，逐字符比较两个文件<br># 比较级别 1：[0~8,11~31,127 号字符都会被忽略] 9、10 号字符以外的控制字符都视而不见，将 9、10、32 号字符看作空白，忽略文件最开始和最后的所有空白，任意两个连续的空白段，只要包含的换行符个数相同则认为相同，在这样的情形下比较两个文件，（如 "a\nb" 和 "  a \t \n b \t\n" 和 "\ta  \nb\t\n\n " 双引号中的内容在此模式下都被认为是相同的）<br># 比较级别 2：[0~8,11~31,127 号字符都会被忽略] 两个文件只要打印的效果相同则认为相同，9 号字符根据 compare_tab_width 考察其打印宽度<br># 比较级别 3：[0~8,11~31,127 号字符都会被忽略] 忽略 9、10 号字符以外的控制字符后，逐字符比较两个文件<br># 默认的比较程序可以设定两个比较级别：ac_level 和 pe_level，首先会在 ac_level 级别下比较两个文件的内容是否一致，不一致则会切换至 pe_level 级别下比较两个文件的内容是否一致，pe_level不能大于 ac_level<br>#################################';
            var help_of_special_judge = '#################################<br># 如果启用自定义比较程序（Special Judge Program），则会在测试的最开始阶段在数据文件夹（/data）下执行 make 命令，请自行准备 makefile 文件。make 命令执行后应该在数据文件夹下生成 __compare__ 程序。测试脚本会在测试程序正确运行后调用"/data/__compare__ stdin_file stdout_file program_stdout_file",其中 stdin_file 和 stdout_file 为本轮测试的标准输入和标准输出文件，program_stdout_file 为存放提交的程序的标准输出的内容的文件。<br># __compare__ 程序的输出：第一行应为一个 [0, 1] 范围内的实数，表示程序本轮的得分，第二行开始为比较的附加说明。<br>#################################';
            function my_popover_show(elem) {
                var __elem_id = $("#" + elem.id);
                if (elem.id == "compared_level_label") {
                    __elem_id.attr("data-content", help_of_compare_ac_level);
                } else if (elem.id == "special_compared_label") {
                    __elem_id.attr("data-content", help_of_special_judge);
                }
                __elem_id.popover('show');
            }
            function my_popover_hide(elem) {
                var __elem_id = $("#" + elem.id);
                __elem_id.attr("data-content", "");
                __elem_id.popover('hide');
            }
            function my_popover_change(elem) {
                var __elem_id = $("#" + elem.id);
                var __special_compared_label = $("#special_compared_label");
                var __compared_level_label = $("#compared_level_label");
                if (__elem_id.attr("data-content") == "") {
                    if (elem.id == "compared_level_label") {
                        __elem_id.attr("data-content", help_of_compare_ac_level);
                        __special_compared_label.attr("data-content", "");
                        __special_compared_label.popover('hide');
                    } else if (elem.id == "special_compared_label") {
                        __elem_id.attr("data-content", help_of_special_judge);
                        __compared_level_label.attr("data-content", "");
                        __compared_level_label.popover('hide');
                    }
                    __elem_id.popover('show');
                }
                else {
                    __elem_id.attr("data-content", "");
                    __elem_id.popover('hide');
                }
            }
            window.onbeforeunload = function () {
                if (is_form_changed() && save_message != 1) {
                    return "您的修改内容还没有保存，您确定离开吗？";
                }
            }
            function is_form_changed() {
                var is_changed = false;
                jQuery("input,textarea").each(function () {
                    var _v = jQuery(this).attr('_value');
                    if (typeof(_v) == 'undefined')
                        _v = '';
                    if (_v != jQuery(this).val())
                        is_changed = true;
                });
                return is_changed;
            }
            jQuery(document).ready(function () {
                jQuery("input,textarea").each(function () {
                    jQuery(this).attr('_value', jQuery(this).val());
                });
            });
            function check_problem_title(){
            }
            function check_time_limit(){
                var __time_limit = document.getElementById("time_limit");
                if(__time_limit.value < 1 || __time_limit.value > 30000){
                    alert("时间限制需要设置在1~30000ms之内！");
                    $("#time_limit").val(1000);
                }
            }
            function check_memory_limit(){
                var __memory_limit = document.getElementById("memory_limit");
                if (__memory_limit.value < 1 || __memory_limit.value > 204800) {
                    alert("内存限制需要设置在1~204800KB之内！");
                    $("#memory_limit").val(65536);
                }
            }
            function check_special_mode() {
                var __special_compared = $("#special_compared");
                if (__special_compared.val() == 0) {
                    $(".makefile_div").css("display", "none");
                    $("#if_special_judge_then").css("display", "block");
                } else if (__special_compared.val() == 1) {
                    $(".makefile_div").css("display", "block");
                    $("#if_special_judge_then").css("display", "none");
                } else {
                    alert("自定义比较程序的值只能为0或者1！");
                    __special_compared.val(0);
                    __special_compared.focus();
                }
            }
            function check_ac_compared_level(){
                var __check_ac_compared_level = document.getElementById("ac_compared_level");
                if (__check_ac_compared_level.value < 0 || __check_ac_compared_level.value > 3) {
                    alert("AC比较级别需要设置在0~3之内！");
                    $("#ac_compared_level").val(2);
                }
            }
            function check_pe_compared_level(){
                var __check_pe_compared_level = document.getElementById("pe_compared_level");
                if (__check_pe_compared_level.value < 0 || __check_pe_compared_level.value > 3) {
                    alert("PE比较级别需要设置在0~3之内！");
                    $("#pe_compared_level").val(0);
                }
            }
            function check_tab_compared_level(){
                var __check_tab_compared_level = document.getElementById("tab_compared_level");
                if (__check_tab_compared_level.value < 0 || __check_tab_compared_level.value > 100) {
                    alert("TAB比较级别需要设置在0~100之内！");
                    $("#tab_compared_level").val(4);
                }
            }
            function check_case_compared_level(){
                var __check_case_compared_level = document.getElementById("case_compared_level");
                if (__check_case_compared_level.value < 0 || __check_case_compared_level.value > 1) {
                    alert("CASE比较级别需要设置为0或者1！");
                    $("#case_compared_level").val(1);
                }
            }
            function check_all(){
                check_problem_title();
                check_time_limit();
                check_memory_limit();
                check_special_mode();
                check_ac_compared_level();
                check_pe_compared_level();
                check_tab_compared_level();
                check_case_compared_level();
            }
            (function ($) {//iCheck内部js
                $.icheck = {
                    init: function () {
                        var _this = this;
                        _this._checkbox = "checkbox";
                        _this._radio = "radio";
                        _this._disabled = "disabled";
                        _this._enable = "enable";
                        _this._checked = "checked";
                        _this._hover = "hover";
                        _this._arrtype = [_this._checkbox, _this._radio];
                        _this._mobile = /ipad|iphone|ipod|android|blackberry|windows phone|opera mini|silk/i.test(navigator.userAgent);
                        $.each(_this._arrtype, function (k, v) {
                            _this.click(v);
                            if (!_this._mobile) {
                                _this.mouseover(v);
                                _this.mouseout(v);
                            }
                        });
                    },
                    click: function (elem) {
                        var _this = this;
                        elem = "." + elem;
                        $(document).on("click", elem, function () {
                            var $this = $(this),
                                    _ins = $this.find("ins");
                            if (!(_ins.hasClass(_this._disabled) || _ins.hasClass(_this._enable))) {
                                if (!!_ins.hasClass(_this._checked)) {
                                    _ins.removeClass(_this._checked).addClass(_this._hover);
                                } else {
                                    if (/radio/ig.test(elem)) {
                                        var _name = $this.attr("name");
                                        $(elem + "[name=" + _name + "]").find("ins").removeClass(_this._checked);
                                    }
                                    $(elem).find("ins").removeClass(_this._hover);
                                    _ins.addClass(_this._checked);
                                }
                            }
                        });
                    },
                    mouseover: function (elem) {
                        var _this = this;
                        elem = "." + elem;
                        $(document).on("mouseover", elem, function () {
                            var $this = $(this);
                            var _ins = $this.find("ins");
                            if (!(_ins.hasClass(_this._disabled) || _ins.hasClass(_this._enable) || _ins.hasClass(_this._checked))) {
                                _ins.addClass(_this._hover);
                                $this.css("cursor", "pointer");
                            } else {
                                $this.css("cursor", "default");
                            }
                        });
                    },
                    mouseout: function (elem) {
                        var _this = this;
                        elem = "." + elem;
                        $(document).on("mouseout", elem, function () {
                            $(elem).find("ins").removeClass(_this._hover);
                        });
                    }
                };
                $.icheck.init();
            })(jQuery);
